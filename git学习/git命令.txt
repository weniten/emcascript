git 命令大全
打开git图形界面
git gui

查看git版本
git --version

查看git配置信息
git config --list

设置git用户名（全局）
git config --global user.name "输入你的用户名"
例子：git config --global user.name wen
设置git用户名（当前仓库用户名）
git config user.name "输入你的用户名"    	或者
git config --local user.name "输入你的用户名"

设置git用户邮箱（全局）
git config --global user.email "输入你的邮箱"
设置git用户名（当前仓库用户邮箱）
git config user.email "输入你的用户邮箱"    	或者
git config --local user.email "输入你的用户邮箱"

修改全局用户名或用户邮箱
git config --global --replace-all user.name "输入你的用户名"
git config --global --replace-all user.email "输入你的用户邮箱"

初始化git
git init

查看当前git状态
git status 

将文件推送到git暂存区
git add 文件名

将文件从暂存区删除
git rm --cached 文件名

将暂存区的文件提交到本地库
git commit -m "日志消息" 文件名

修改commit信息
git commit --amend

查看版本信息
git relog 	或者	
git log

退出git log：点击键盘‘q’即可退出

将暂存区的文件从暂存区撤出，但不会更改文件的内容
git restore --staged 文件名

将在工作空间但是不在暂存区的文件撤销更改(内容恢复到没修改之前的状态)
git restore 文件名

版本穿梭（往前或者往后变更都可以，一般使用之前可以利用git reflog 查看版本号）
git reset --hard 版本号
git reset --soft HEAD~1 返回上一个版本
git reset --soft HEAD~2 返回上两个版本
如果加了 --hard 参数 表示 撤销commit并且撤销add

创建分支
git branch '分支名'

查看所有分支
git branch -v

删除分支
git branch -d 分支名

切换分支
git checkout '分支名'

将某个分支合并到某个分支
git merge '被合并到其他分支的分支名'

代码冲突解决方法
1、取消合并
	使用取消合并命令取消合并操作
	git merge --abort 

2、继续合并
	这时要手动修改要合并的文件，然后再git add，最后git commit
	（注意此时git commit命令不能带文件名）
	补充内容：
		出现合并冲突的文件通常会显示下面的样式:
			
			<<<<<<< HEAD
			
				内容。。。。
			
			=======
			
				内容。。。
				
			>>>>>>> wen

		"<<<<<<<HEAD"和"======="之间的内容指的是当前分支的合并之前代码
		"======="和">>>>>>> wen"之间的内容指的是“wen”分支合并之前的代码
		
	重点：合并后只会修改当前分支，不会影响合并过来的分支

将本地代码推送到远程库
git push 远程库链接（或者是远程库别名都行） 分支名
注意：git push 会出现弹窗，提示你输入邮箱密码，此时输入你github的邮箱和密码即可

	
从远程库获取代码并合并本地的版本
git pull 仓库链接 分支
例子：git pull https://github.com/weniten/interview.git master

拷贝一个 Git 仓库到本地
git clone 仓库链接
例子：git clone https://github.com/weniten/interview.git

git下重命名文件
git mv 旧文件名 新文件名
注意：执行git mv 之后相当于执行了git add，直接git commit 即可

查看远程主机名（就是远程库别名）
git remote -v

创建远程主机名（就是远程库别名）
git remote add 主机名 远程库链接
git remote add interview https://github.com/weniten/interview.git

修改远程主机名 （就是远程库别名）
git remote rename 原主机名 新主机名
git remote rename origin interview

删除远程主机名 （就是远程库别名）
git remote rm 主机名

